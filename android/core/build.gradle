/**
 * Copyright (c) Visly Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true

            unitTests.all {
                // All the usual Gradle options.
                testLogging {
                    events "passed", "skipped", "failed", "standardOut", "standardError"
                    outputs.upToDateWhen {false}
                    showStandardStreams = true
                }
            }
        }
    }
}

dependencies {
    implementation 'com.facebook.yoga.android:yoga-layout:1.9.0'
    implementation 'com.facebook.soloader:soloader:0.5.1'
    implementation 'com.facebook.fresco:fresco:1.10.0'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.facebook.fbui.textlayoutbuilder:textlayoutbuilder:1.4.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.1"

    implementation 'androidx.core:core:1.0.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation "org.robolectric:robolectric:4.0-beta-1"
    testImplementation 'androidx.test:core:1.1.0'

    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation "androidx.test.ext:junit:1.1.0"
}

ext {
    bintrayRepo = 'maven'
    bintrayName = 'android-vml-client'

    publishedGroupId = 'app.visly'
    libraryName = bintrayName
    artifact = 'core'

    libraryDescription = 'Android VML client library'

    siteUrl = 'https://visly.app'
    gitUrl = 'https://github.com/vislyhq/android-vml-client.git'

    libraryVersion = '0.0.1'

    developerId = 'visly'
    developerName = 'Visly'
    developerEmail = 'android@visly.app'

    licenseName = 'MIT'
    licenseUrl = 'https://github.com/vislyhq/android-vml-client/blob/master/LICENSE'
    allLicenses = ["MIT"]
}

group = publishedGroupId
version = libraryVersion

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId publishedGroupId
            artifactId artifact
            name libraryName
            description libraryDescription
            url siteUrl

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
if (file("private.properties").exists()) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']

    pkg {
        repo = bintrayRepo
        name = bintrayName
        userOrg = developerId
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        dryRun = false
        publish = true
        override = false
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
}

